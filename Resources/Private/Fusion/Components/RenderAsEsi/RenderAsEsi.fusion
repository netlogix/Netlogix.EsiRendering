prototype(Netlogix.EsiRendering:RenderAsEsi) {
    @class = 'Netlogix\\EsiRendering\\FusionObjects\\RenderAsEsiImplementation'

    # Context node used to render the given content as ESI
    node = ${node}
    content = ''
}

esiRendering = Neos.Fusion:Component {
    src = Neos.Fusion:UriBuilder {
        package = 'Netlogix.EsiRendering'
        controller = 'EsiRendering'
        action = 'index'
        arguments = ${arguments}
        absolute = false
    }

    renderer = Neos.Fusion:Join {
        esiUri = Neos.Fusion:Tag {
            tagName = 'link'

            attributes {
                rel = 'esi:include'
                'esi-identifier' = ${esiIdentifier}
                'context-node' = ${contextNode.contextPath}
                href = ${props.src}
            }

            @if.debug = ${Configuration.setting('Netlogix.EsiRendering.debug') == true}
        }

        esi = Neos.Fusion:Tag {
            tagName = 'esi:include'

            attributes.src = ${props.src}

            selfClosingTag = true
        }
    }

    @cache {
        mode = 'cached'
        entryIdentifier {
            esiIdentifier = ${esiIdentifier}
            contextNode = ${contextNode}
        }
        entryTags {
            0 = 'Netlogix_EsiRendering'
        }
    }
}
